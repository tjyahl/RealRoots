------------------------------------------------------
---Code to run the 27 lines example-------------------
------------------------------------------------------
restart
loadPackage("RealRoots")--load our package
R = QQ[c,d,e,f];
S = R[t];
T = QQ[x,y,z];
start = transpose matrix{apply(20,i->random(-30,30)*random(QQ))};
curMax = 0;
stuckCount = 0;
i=0;
while true do (
    i=i+1;
    stuckCount=stuckCount+1;
    if (i%100==0 or stuckCount > 20) then (
	print("refreshing base");
	start = transpose matrix{apply(20,i->random(-30,30)*random(QQ))};
	stuckCount = 0
	);
    print("");
    print("starting "|toString(i)|"-th cubic");
    scale = ceiling((27-curMax)/4 + stuckCount/2);
    coeffs = start + random(1,scale)*random(QQ^20,QQ^1)-random(1,scale)*random(QQ^20,QQ^1);
    h = basis(0,3,T)*coeffs;
    if h==0 then continue;
    print h;
    --parametrize h with equations x(t),y(t),z(t)
    F = sub(h,{x => t, y => c + d*t, z => e + f*t}); --x=a+bt, assume a = 0 and b = 1
    C = sub(last coefficients F, coefficientRing S);
    s = flatten entries C;
    ch = characteristicPolynomial(first gens R,ideal s);
    --(l,ch,gv) = rationalUnivariateRepresentation(ideal s);
    --print("rationalUnivariateRepresentation complete, counting real roots");
    --if first degree ch != 27 then continue;
    n = SturmCount(ch);
    if (n>=curMax) then (
	print("new or equivalent maximum found, changing base point");
	if (n>curMax) then (
	    stuckCount=0
	    curMax = n;
	    );
	start = coeffs
	);
    print("num real solns: "|toString(n));
    if n==27 then break
    )


--finding parameterizations of the lines
h = 58313/630*x^3+13351/1260*x^2*y-2645/84*x*y^2+1997/180*y^3+1869/20*x^2*z+769/105*x*y*z-323/90*y^2*z-27/20*x*z^2-4751/90*y*z^2+12053/630*z^3+1073/120*x^2-883/120*x*y-977/252*y^2-8737/504*x*z+2171/360*y*z+541/8*z^2+1079/210*x-30977/1260*y-36767/630*z-6953/1260
F = sub(h,{x => t, y => c + d*t, z => e + f*t}); --x=a+bt, assume a = 0 and b = 1
C = sub(last coefficients F, coefficientRing S);
s = ideal flatten entries C;
degree s
(l,ch,gv) = rationalUnivariateRepresentation(s);

L = apply(realRootIsolation(ch,.0000001),first)
solns = apply(L,r->apply(gv,f->sub(f,(first gens ring f)=>r)))
--should've maybe just done floating point originally. Rationals take a lot of time.
solns = apply(solns,z->z/toRR)


--15 real solns:
-- -1573/63x3-4169/180x2y-2962/105xy2-1679/252y3-2675/42x2z+277/140xyz+1375/84y2z-1797/280xz2+3827/140yz2-7279/840z3+509/180x2+21739/840xy-1649/30y2-27649/504xz+19877/840yz-19/14z2+2498/105x-317/105y-17/120z+10873/2520
-- 239/105x3-15031/252x2y-228643/2520xy2-174911/2520y3-23557/360x2z+3221/280xyz+25943/420y2z+623/45xz2+10089/140yz2-3271/56z3-883/90x2+13961/360xy-25681/420y2-2497/35xz+2587/840yz-370/63z2+1749/140x+22507/630y+45613/1260z+3489/280
-- -179/70x3-14401/252x2y-23677/252xy2-86983/1260y3-23503/360x2z+8963/840xyz+75407/1260y2z+4526/315xz2+10103/140yz2-753/14z3-1103/90x2+381/10xy-82573/1260y2-28341/280xz+3009/280yz-821/126z2+1217/140x+43439/1260y+40363/1260z+10019/840
-- 1193/84x3-1576/35x2y-16817/252xy2-31607/360y3-149851/2520x2z+3673/168xyz+14333/315y2z+7121/2520xz2+28447/420yz2-5799/280z3-20119/840x2+20087/630xy-4097/70y2-26599/630xz+7229/504yz+25439/420z2+10051/630x+25847/504y+86921/1260z+453/20
-- 25591/630x3-96713/2520x2y-5567/63xy2-39997/630y3-10375/168x2z+2263/2520xyz+1979/42y2z+7757/504xz2+46439/1260yz2-8471/504z3-106723/2520x2+573/56xy-160261/2520y2-7151/360xz+23203/840yz+25889/315z2+2134/315x+8609/126y+118187/1260z+39337/840
-- -733/70x3-1/12x2y+32xy2+389/30y3-6x2z-250xyz-232/15y2z-2xz2+790/63yz2+107/12z3-177/4x2-29/12xy+743/12y2+134/9xz+25/6yz-531/7z2+12/7x+41/24y-93/2z+512/7
-- 

--27 real solns:
-- 58313/630x3+13351/1260x2y-2645/84xy2+1997/180y3+1869/20x2z+769/105xyz-323/90y2z-27/20xz2-4751/90yz2+12053/630z3+1073/120x2-883/120xy-977/252y2-8737/504xz+2171/360yz+541/8z2+1079/210x-30977/1260y-36767/630z-6953/1260
-- 81*(x^3+y^3+z^3)-189*(x^2*y+x^2*z+y^2*x+y^2*z+z^2*x+z^2*y)+54*x*y*z+126*(x*y+x*z+y*z)-9*(x^2+y^2+z^2)-9*(x+y+z)+1

-- 58313/630*x^3+13351/1260*x^2*y-2645/84*x*y^2+1997/180*y^3+1869/20*x^2*z+769/105*x*y*z-323/90*y^2*z-27/20*x*z^2-4751/90*y*z^2+12053/630*z^3+1073/120*x^2-883/120*x*y-977/252*y^2-8737/504*x*z+2171/360*y*z+541/8*z^2+1079/210*x-30977/1260*y-36767/630*z-6953/1260
--
-- solns = {{-15.6456, -28.4702, 6.99529, 13.5384}, {-2.70772, -10.0305, -.753902, -5.43378}, {4.23581,
--       ---------------------------------------------------------------------------------------------
--       -14.4001, -2.10375, 7.09905}, {.549783, -3.54809, 1.17485, -2.55345}, {1.81162, -1.93403,
--       ---------------------------------------------------------------------------------------------
--       .0524936, -3.98911}, {-1.73202, -.875448, -.266952, -.864684}, {-1.72395, -4.71124, .716127,
--       ---------------------------------------------------------------------------------------------
--       2.51475}, {-.985198, -.992488, .0735468, -.719874}, {1.11422, -.751809, -1.75255, -.929219},
--       ---------------------------------------------------------------------------------------------
--       {-.459626, -1.15387, .534917, -.344849}, {-.0431721, -1.94728, -.0703685, .808306}, {1.18772,
--       ---------------------------------------------------------------------------------------------
--       -.176033, -.390832, -.89436}, {-.122873, 1.67552, -.0414284, -.507164}, {-.576004, 2.25282,
--       ---------------------------------------------------------------------------------------------
--       .0984469, -.522393}, {-1.60171, 3.52199, .665718, -.880366}, {4.38724, -1.781, 2.08296,
--       ---------------------------------------------------------------------------------------------
--       -2.13528}, {1.98872, 1.04049, .254512, -.596163}, {-1.76838, 3.94658, -.285096, 1.54188},
--       ---------------------------------------------------------------------------------------------
--       {.934384, 3.98395, -.380084, -1.07086}, {-.471431, 2.72099, .529577, 1.4078}, {1.51722,
--       ---------------------------------------------------------------------------------------------
--       1.88879, -1.2803, 2.16519}, {.341086, 6.9159, -.209898, -2.40999}, {.12498, 2.25034, .870069,
--       ---------------------------------------------------------------------------------------------
--       1.60676}, {-4.63311, 7.05555, -16.6281, 19.2783}, {1.91789, 2.7885, .173715, 1.39774},
--       ---------------------------------------------------------------------------------------------
--       {5.40152, 7.68822, 11.3636, 21.0431}, {38.8121, 78.7309, 18.298, 35.788}}
   
R = RR[t]
lineParameterizations = apply(solns,z->(t,z#0+z#1*t,z#2+z#3*t))

--{(t, - 28.4702t - 15.6456, 13.5384t + 6.99529), (t, - 10.0305t - 2.70772, - 5.43378t -
--       ---------------------------------------------------------------------------------------------
--       .753902), (t, - 14.4001t + 4.23581, 7.09905t - 2.10375), (t, - 3.54809t + .549783, - 2.55345t
--       ---------------------------------------------------------------------------------------------
--       + 1.17485), (t, - 1.93403t + 1.81162, - 3.98911t + .0524936), (t, - .875448t - 1.73202, -
--       ---------------------------------------------------------------------------------------------
--       .864684t - .266952), (t, - 4.71124t - 1.72395, 2.51475t + .716127), (t, - .992488t - .985198,
--       ---------------------------------------------------------------------------------------------
--       - .719874t + .0735468), (t, - .751809t + 1.11422, - .929219t - 1.75255), (t, - 1.15387t -
--       ---------------------------------------------------------------------------------------------
--       .459626, - .344849t + .534917), (t, - 1.94728t - .0431721, .808306t - .0703685), (t, -
--       ---------------------------------------------------------------------------------------------
--       .176033t + 1.18772, - .89436t - .390832), (t, 1.67552t - .122873, - .507164t - .0414284), (t,
--       ---------------------------------------------------------------------------------------------
--       2.25282t - .576004, - .522393t + .0984469), (t, 3.52199t - 1.60171, - .880366t + .665718),
--       ---------------------------------------------------------------------------------------------
--       (t, - 1.781t + 4.38724, - 2.13528t + 2.08296), (t, 1.04049t + 1.98872, - .596163t + .254512),
--       ---------------------------------------------------------------------------------------------
--       (t, 3.94658t - 1.76838, 1.54188t - .285096), (t, 3.98395t + .934384, - 1.07086t - .380084),
--       ---------------------------------------------------------------------------------------------
--       (t, 2.72099t - .471431, 1.4078t + .529577), (t, 1.88879t + 1.51722, 2.16519t - 1.2803), (t,
--       ---------------------------------------------------------------------------------------------
--       6.9159t + .341086, - 2.40999t - .209898), (t, 2.25034t + .12498, 1.60676t + .870069), (t,
--       ---------------------------------------------------------------------------------------------
--       7.05555t - 4.63311, 19.2783t - 16.6281), (t, 2.7885t + 1.91789, 1.39774t + .173715), (t,
--       ---------------------------------------------------------------------------------------------
--       7.68822t + 5.40152, 21.0431t + 11.3636), (t, 78.7309t + 38.8121, 35.788t + 18.298)}   

apply(solns,z->intersection((interval(-4,4)-interval(z#0))/z#1,(interval(-4,4)-interval(z#2))/z#3))

--t-intervals
--{[-.690043,-.409047], [-.668731,.128834], [.0163759,.571928], [-.972415,1.28232],
--       ---------------------------------------------------------------------------------------------
--       [-.989572,1.01589], [-4.9347,2.59065], [-1.21496,.483109], [-5.02293,3.03762],
--       ---------------------------------------------------------------------------------------------
--       [-3.83845,2.41864], [-3.86492,3.06826], [-2.07632,2.03198], [-4.90947,4.03547],
--       ---------------------------------------------------------------------------------------------
--       [-2.31398,2.46065], [-1.51987,2.03124], [-.680947,1.5905], [.21743,2.84879],
--       ---------------------------------------------------------------------------------------------
--       [-5.75568,1.93301], [-.565457,1.46161], [-1.23857,.769492], [-1.2968,1.64331],
--       ---------------------------------------------------------------------------------------------
--       [-1.25611,1.31448], [-.627696,.529058], [-1.83305,1.72197], [.655045,1.07002],
--       ---------------------------------------------------------------------------------------------
--       [-2.12225,.746678], [-.730103,-.349931], [-.543777,-.442165]}
